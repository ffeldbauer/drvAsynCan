#################################################
# ###                                       ### #
# ### EPICS Database for                    ### #
# ###   TMCM 142 IF                         ### #
# ###                                       ### #
# ### author: F.Feldbauer                   ### #
# ###         F.Heidelberg                  ### #
# ###                                       ### #
# ### Ref 1.0; 2013-01-07                   ### #
# ###                                       ### #
# ### macros: subsys  PANDA subsystem       ### #
# ###         sector  Sector of subsys      ### #
# ###         BUS     AsynPort              ### #
#################################################

# TMCM Status message
# This record is updated after each read or write command
record( mbbi, "PANDA:$(subsys):MOTOR:$(sector):STATUS" ) {
  field( DTYP, "asynInt32" )
  field( INP,  "@asyn($(BUS),0,1)STATUS" )
  field( SCAN, "I/O Intr" )

  # State values
  field( ZRVL, "100" )
  field( ONVL, "101" )
  field( TWVL, "1" )
  field( THVL, "2" )
  field( FRVL, "3" )
  field( FVVL, "4" )
  field( SXVL, "5" )
  field( SVVL, "6" )

  # State strings
  field( ZRST, "Successfully executed")#, no error" )
  field( ONST, "Command loaded in eeprom")#into TMCL program EEPROM" )
  field( TWST, "Wrong checksum" )
  field( THST, "Invalid command" )
  field( FRST, "Wrong type" )
  field( FVST, "Invalid value" )
  field( SXST, "Configuration EEPROM")# locked" )
  field( SVST, "Command not available" )

  # State severities
  field( ZRSV, "NO_ALARM" )
  field( ONSV, "NO_ALARM" )
  field( TWSV, "MAJOR" )
  field( THSV, "MAJOR" )
  field( FRSV, "MAJOR" )
  field( FVSV, "MAJOR" )
  field( SXSV, "MAJOR" )
  field( SVSV, "MAJOR" )

}

# Move to an absolute position
record( longout, "PANDA:$(subsys):MOTOR:$(sector):MVP:ABS" ) {
  field( DTYP, "asynInt32" )
  field( OUT,  "@asyn($(BUS),0,1)MVP" )
  # Limits 
  field( DRVH, "+2147483647" )
  field( DRVL, "-2147483648" )
  # Display
  field( EGU,  "usteps" )
  field( HOPR, "+2147483647" )
  field( LOPR, "-2147483648" )
}
# Rests for ROR and ROL
record( seq, "PANDA:$(subsys):MOTOR:$(sector):RESETRORROL"){
  field (SCAN, "Passive")
  # Selection Algorithm
  field (SELM, "All")
  # Output Delay in seconds
  field (DLY1, "0.00")
  field (DLY2, "0.00")
  # Desired Output Links
  field (DOL1, "0")
  field (DOL2, "0")
  # Output links
  field (LNK1, "PANDA:$(subsys):MOTOR:$(sector):ROR NPP")
  field (LNK2, "PANDA:$(subsys):MOTOR:$(sector):ROL NPP")
}


# Rotate right
record( longout, "PANDA:$(subsys):MOTOR:$(sector):ROR" ) {
  field( DTYP, "asynInt32" )
  field( OUT,  "@asyn($(BUS),0,1)ROR" )
  # Limits
  field( DRVH, "+2147483647" )
  field( DRVL, "0" )
  # Display
  field( HOPR, "+2147483647" )
  field( LOPR, "0" )
}

# Rotate left
record( longout, "PANDA:$(subsys):MOTOR:$(sector):ROL" ) {
  field( DTYP, "asynInt32" )
  field( OUT,  "@asyn($(BUS),0,1)ROL" )
  # Limits
  field( DRVH, "+2147483647" )
  field( DRVL, "0" )
  # Display
  field( HOPR, "+2147483647" )
  field( LOPR, "0" )
}

# Stop motor
record( bo, "PANDA:$(subsys):MOTOR:$(sector):MST" ) {
  field( DTYP, "asynInt32" )
  field( OUT,  "@asyn($(BUS),0,1)MST" )

  field( FLNK, "PANDA:$(subsys):MOTOR:$(sector):RESETRORROL" )
}

######################################################################
### Set axis parameter
######################################################################

# set current position
record( longout, "PANDA:$(subsys):MOTOR:$(sector):SAP:ACTUALPOSITION" ) {
  field( DTYP, "asynInt32" )
  field( OUT,  "@asyn($(BUS),1,1)SAP" )
  # Limits 
  field( DRVH, "+2147483647" )
  field( DRVL, "-2147483648" )
  # Display
  field( EGU,  "usteps" )
  field( HOPR, "+2147483647" )
  field( LOPR, "-2147483648" )
}

# set max positioning speed
record( longout, "PANDA:$(subsys):MOTOR:$(sector):SAP:MAXSPEED" ) {
  field( DTYP, "asynInt32" )
  field( OUT,  "@asyn($(BUS),4,1)SAP" )
  # Limits 
  field( DRVH, "+2147483647" )
  field( DRVL, "0" )
  # Display
  field( EGU,  "usteps/s" )
  field( HOPR, "+2147483647" )
  field( LOPR, "0" )

  field( FLNK, "PANDA:$(subsys):MOTOR:$(sector):GAP:MAXSPEED" )
}

# Set max acceleration and deceleration
record( longout, "PANDA:$(subsys):MOTOR:$(sector):SAP:MAXACCELERATION" ) {
  field( DTYP, "asynInt32" )
  field( OUT,  "@asyn($(BUS),5,1)SAP" )
  # Limits 
  field( DRVH, "16777215" )
  field( DRVL, "1" )
  # Display
  field( EGU,  "usteps/s/s" )
  field( HOPR, "16777215" )
  field( LOPR, "1" )

  field( FLNK, "PANDA:$(subsys):MOTOR:$(sector):GAP:MAXACCELERATION" )
}

# Set "right limit switch disable"
record( bo, "PANDA:$(subsys):MOTOR:$(sector):SAP:RIGHTLIMITSWITCH" ) {
  field( DTYP, "asynInt32" )
  field( OUT,  "@asyn($(BUS),12,1)SAP" )
  field( ZNAM, "Enabled" )
  field( ONAM, "Disabled" )

  field( FLNK, "PANDA:$(subsys):MOTOR:$(sector):GAP:RIGHTLIMITSWITCHDISABLE" )
}

# Set "left limit switch disable"
record( bo, "PANDA:$(subsys):MOTOR:$(sector):SAP:LEFTLIMITSWITCH" ) {
  field( DTYP, "asynInt32" )
  field( OUT,  "@asyn($(BUS),13,1)SAP" )
  field( ZNAM, "Enabled" )
  field( ONAM, "Disabled" )

  field( FLNK, "PANDA:$(subsys):MOTOR:$(sector):GAP:LEFTLIMITSWITCHDISABLE" )
}

# Set stop deceleration
record(longout, "PANDA:$(subsys):MOTOR:$(sector):SAP:STOPDECELERATION" ) {
  field( DTYP, "asynInt32" )
  field( OUT,  "@asyn($(BUS),15,1)SAP" )
  # Limits 
  field( DRVH, "+16777215" )
  field( DRVL, "1" )
  # Display
  field( EGU,  "usteps/s/s" )
  field( HOPR, "+16777215" )
  field( LOPR, "1" )

  field( FLNK, "PANDA:$(subsys):MOTOR:$(sector):GAP:STOPDECELERATION" )
}
           
# Set µstep resolution
record( mbbo, "PANDA:$(subsys):MOTOR:$(sector):SAP:USTEPRESOLUTION" ) {
  field( DTYP, "asynInt32" )
  field( OUT,  "@asyn($(BUS),27,1)SAP" )

  # state strings
  field( ZRST, "2048 micro steps" )
  field( ONST, "1024 micro steps" )
  field( TWST, "512 micro steps" )
  field( THST, "256 micro steps" )
  field( FRST, "128 micro steps" )
  field( FVST, "64 micro steps" )
  field( SXST, "32 micro steps" )
  field( SVST, "16 micro steps" )
  field( EIST, "8 micro steps" )
  field( NIST, "4 micro steps" )
  field( TEST, "2 micro steps" )
  field( ELST, "1 micro steps" )

  # state values
  field( ZRVL, "0" )
  field( ONVL, "1" )
  field( TWVL, "2" )
  field( THVL, "3" )
  field( FRVL, "4" )
  field( FVVL, "5" )
  field( SXVL, "6" )
  field( SVVL, "7" )
  field( EIVL, "8" )
  field( NIVL, "9" )
  field( TEVL, "10" )
  field( ELVL, "11" )

  field( FLNK, "PANDA:$(subsys):MOTOR:$(sector):GAP:USTEPRESOLUTION" )
}

# Set switchmode
record( mbboDirect, "PANDA:$(subsys):MOTOR:$(sector):SAP:SWITCHMODE" ) {
  field( DTYP, "asynUInt32Digital" )
  field( OUT,  "@asynMask($(BUS),14,0x1f3c,1)SAP_U" )
  field( FLNK, "PANDA:$(subsys):MOTOR:$(sector):GAP:SWITCHMODE" )
}

# Set "left limit switch disable"
record( bo, "PANDA:$(subsys):MOTOR:$(sector):SAP:SOFTSTOP" ) {
  field( OUT,  "PANDA:$(subsys):MOTOR:$(sector):SAP:SWITCHMODE.B5 PP" )
  field( ONAM, "Enabled" )
  field( ZNAM, "Disabled" )
}




######################################################################
### Get axis parameter
######################################################################

# Get target position
record( longin, "PANDA:$(subsys):MOTOR:$(sector):GAP:TARGETPOSITION" ) {
  field( DTYP, "asynInt32" )
  field( INP,  "@asyn($(BUS),0,1)GAP" )
  # Display
  field( EGU,  "usteps" )
  field( HOPR, "+2147483647" )
  field( LOPR, "-2147483648" )

  field( PINI, "YES" )
  field( FLNK, "PANDA:$(subsys):MOTOR:$(sector):GAP:RIGHTLIMITSWITCHSTAT" )
}

# Get current position
record( longin, "PANDA:$(subsys):MOTOR:$(sector):GAP:ACTUALPOSITION" ) {
  field( DTYP, "asynInt32" )
  field( INP,  "@asyn($(BUS),1,1)GAP" )
  # Display
  field( EGU,  "usteps" )
  field( HOPR, "+2147483647" )
  field( LOPR, "-2147483648" )
  field( PINI, "YES" )

  field( SCAN, "1 second" )
  field( FLNK, "PANDA:$(subsys):MOTOR:$(sector):GAP:TARGETPOSITION" )
}

# Get max positioning speed
record( longin, "PANDA:$(subsys):MOTOR:$(sector):GAP:MAXSPEED" ) {
  field( DTYP, "asynInt32" )
  field( INP,  "@asyn($(BUS),4,1)GAP" )
  # Display
  field( EGU,  "usteps/s" )
  field( HOPR, "+2147483647" )
  field( LOPR, "0" )
  field( PINI, "YES" )
}

# Get max acceleration and deceleration
record( longin, "PANDA:$(subsys):MOTOR:$(sector):GAP:MAXACCELERATION" ) {
  field( DTYP, "asynInt32" )
  field( INP,  "@asyn($(BUS),5,1)GAP" )
  # Limits 
  # Display
  field( EGU,  "usteps/s/s" )
  field( HOPR, "16777215" )
  field( LOPR, "1" )

  field( PINI, "YES" )
}

# Get "right limit switch status"
record( bi, "PANDA:$(subsys):MOTOR:$(sector):GAP:RIGHTLIMITSWITCHSTAT" ) {
  field( DTYP, "asynInt32" )
  field( INP,  "@asyn($(BUS),10,1)GAP" )
  #Check for correct values!!!
  field( ONAM, "1" )
  field( ZNAM, "0" )

  field( PINI, "YES" )
  field( FLNK, "PANDA:$(subsys):MOTOR:$(sector):GAP:LEFTLIMITSWITCHSTAT" )
}

# Get "left limit switch status"
record( bi, "PANDA:$(subsys):MOTOR:$(sector):GAP:LEFTLIMITSWITCHSTAT" ) {
  field( DTYP, "asynInt32" )
  field( INP,  "@asyn($(BUS),11,1)GAP" )
  #Check for correct values!!!
  field( ONAM, "1" )
  field( ZNAM, "0" )

  field( PINI, "YES" )
}

# Get "right limit switch disable"
record( bi, "PANDA:$(subsys):MOTOR:$(sector):GAP:RIGHTLIMITSWITCHDISABLE" ) {
  field( DTYP, "asynInt32" )
  field( INP,  "@asyn($(BUS),12,1)GAP" )
  field( ONAM, "Enabled" )
  field( ZNAM, "Disabled" )
  field( PINI, "YES" )
}

# Get "left limit switch disable"
record( bi, "PANDA:$(subsys):MOTOR:$(sector):GAP:LEFTLIMITSWITCHDISABLE" ) {
  field( DTYP, "asynInt32" )
  field( INP,  "@asyn($(BUS),13,1)GAP" )
  field( ONAM, "Enabled" )
  field( ZNAM, "Disabled" )
  field( PINI, "YES" )
}

# Get stop deceleration
record( longin, "PANDA:$(subsys):MOTOR:$(sector):GAP:STOPDECELERATION" ) {
  field( DTYP, "asynInt32" )
  field( INP,  "@asyn($(BUS),15,1)GAP" )
  # Display
  field( EGU,  "usteps/s/s" )
  field( HOPR, "16777215" )
  field( LOPR, "1" )
  field( PINI, "YES" )
}

# Get µstep resolution
record( mbbi, "PANDA:$(subsys):MOTOR:$(sector):GAP:USTEPRESOLUTION" ) {
  field( DTYP, "asynInt32" )
  field( INP,  "@asyn($(BUS),27,1)GAP" )

  field( ZRST, "2048 micro steps" )
  field( ONST, "1024 micro steps" )
  field( TWST, "512 micro steps" )
  field( THST, "256 micro steps" )
  field( FRST, "128 micro steps" )
  field( FVST, "64 micro steps" )
  field( SXST, "32 micro steps" )
  field( SVST, "16 micro steps" )
  field( EIST, "8 micro steps" )
  field( NIST, "4 micro steps" )
  field( TEST, "2 micro steps" )
  field( ELST, "1 micro steps" )

  field( ZRVL, "0" )
  field( ONVL, "1" )
  field( TWVL, "2" )
  field( THVL, "3" )
  field( FRVL, "4" )
  field( FVVL, "5" )
  field( SXVL, "6" )
  field( SVVL, "7" )
  field( EIVL, "8" )
  field( NIVL, "9" )
  field( TEVL, "10" )
  field( ELVL, "11" )
  field( PINI, "YES" )
}

# Set switchmode
record( mbbiDirect, "PANDA:$(subsys):MOTOR:$(sector):GAP:SWITCHMODE" ) {
  field( DTYP, "asynUInt32Digital" )
  field( INP,  "@asynMask($(BUS),14,0x1f3c,1)GAP_U" )
  field( PINI, "YES" )
}

# Set "left limit switch disable"
record( bi, "PANDA:$(subsys):MOTOR:$(sector):GAP:SOFTSTOP" ) {
  field( INP,  "PANDA:$(subsys):MOTOR:$(sector):GAP:SWITCHMODE.B5 CP" )
  field( ONAM, "Enabled" )
  field( ZNAM, "Disabled" )
}
